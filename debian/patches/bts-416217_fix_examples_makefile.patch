diff -BurN xml-resume-library-1.5.1-6/examples/Makefile xml-resume-library-1.5.1-6-rzr/examples/Makefile
--- xml-resume-library-1.5.1-6/examples/Makefile	2002-11-28 03:38:35.000000000 +0100
+++ xml-resume-library-1.5.1-6-rzr/examples/Makefile	2007-03-25 22:37:33.000000000 +0200
@@ -48,41 +48,47 @@
 # Basename (filename minus .xml extension) of resume to process
 # For example, put "myresume" here to process "myresume.xml".
 #------------------------------------------------------------------------------
-resume = resume
+resume?=resume
 
 #------------------------------------------------------------------------------
 # Stylesheets
 #------------------------------------------------------------------------------
 # Options: br de fr it nl uk us es
-country = us
+country?=us
 # Options: letter for country=us, a4 for others
-papersize = letter
+papersize?=letter
 
-xsl_base = http://xmlresume.sourceforge.net/xsl
-#xsl_base = ../xsl
-#xsl_base = ../src/www/xsl
-
-html_style = $(xsl_base)/output/$(country)-html.xsl
-text_style = $(xsl_base)/output/$(country)-text.xsl
-fo_style = $(xsl_base)/output/$(country)-$(papersize).xsl
-upgrade_13x_140_style = $(xsl_base)/misc/13x-140.xsl
+xsl_base?=/usr/share/sgml/xml-resume-library/xsl
+#xsl_base?=http://xmlresume.sourceforge.net/xsl
+#xsl_base?=../xsl
+#xsl_base?=../src/www/xsl
+
+html_style?=$(xsl_base)/output/$(country)-html.xsl
+text_style?=$(xsl_base)/output/$(country)-text.xsl
+fo_style?=$(xsl_base)/output/$(country)-$(papersize).xsl
+upgrade_13x_140_style?=$(xsl_base)/misc/13x-140.xsl
 
 #------------------------------------------------------------------------------
 # Processing software
 #------------------------------------------------------------------------------
-make = gmake
+make?=gmake
 
-xsl_proc = java org.apache.xalan.xslt.Process $(xsl_flags) -in $(in) -xsl $(xsl) -out $(out)
-#xsl_proc = java com.icl.saxon.StyleSheet $(xsl_flags) -o $(out) $(in) $(xsl) $(xsl_params)
+CLASSPATH?=\
+/usr/share/java/xalan2.jar:\
+/usr/share/java/fop-0.20.5.jar:\
+/usr/share/java/avalon-framework-4.2.0.jar
 
-pdf_proc = java org.apache.fop.apps.Fop -fo $(fo_flags) $(in) -pdf $(out)
-#pdf_proc = ~/bin/xep/run.sh $(fo_flags) $(in) $(out)
+xsl_proc?=java org.apache.xalan.xslt.Process $(xsl_flags) -in $(in) -xsl $(xsl) -out $(out)
+#xsl_proc?=java com.icl.saxon.StyleSheet $(xsl_flags) -o $(out) $(in) $(xsl) $(xsl_params)
+
+pdf_proc?=java org.apache.fop.apps.Fop -fo $(fo_flags) $(in) -pdf $(out)
+#pdf_proc?=~/bin/xep/run.sh $(fo_flags) $(in) $(out)
 
 # RTF generation currently requires you download a separate, closed source jar 
 # file and add it to your java classpath: 	
 # http://www.xmlmind.com/foconverter/downloadperso.shtml
-rtf_proc = java com.xmlmind.fo.converter.Driver $(in) $(out)
-#rtf_proc = java ch.codeconsult.jfor.main.CmdLineConverter $(in) $(out)
+rtf_proc?=java com.xmlmind.fo.converter.Driver $(in) $(out)
+#rtf_proc?=java ch.codeconsult.jfor.main.CmdLineConverter $(in) $(out)
 
 # Element filtering allows you to create targeted resumes.  
 # You can create your own targets; just specify them in your resume.xml 
@@ -92,8 +98,8 @@
 # "targets" attribute) are always included.  
 # Take a look at example2.xml and try changing the filter targets to get a 
 # feel for how the filter works.
-filter_targets = foodservice carpentry
-filter_proc = java net.sourceforge.xmlresume.filter.Filter -in $(in) -out $(out) $(filter_targets)
+filter_targets?=foodservice carpentry
+filter_proc?=java net.sourceforge.xmlresume.filter.Filter -in $(in) -out $(out) $(filter_targets)
 
 #------------------------------------------------------------------------------
 # End configurable parameters
@@ -111,17 +117,17 @@
 filter: $(resume)-filtered.xml
 
 clean:
-	rm -f $(resume).html
-	rm -f $(resume).txt
-	rm -f $(resume).fo
-	rm -f $(resume).pdf
-	rm -f $(resume).rtf
-	rm -f $(resume)-filtered.xml
-	rm -f $(resume)-filtered.html
-	rm -f $(resume)-filtered.txt
-	rm -f $(resume)-filtered.pdf
-	rm -f $(resume)-filtered.fo
-	rm -f $(resume)-filtered.rtf
+	-@rm -f $(resume).html
+	-@rm -f $(resume).txt
+	-@rm -f $(resume).fo
+	-@rm -f $(resume).pdf
+	-@rm -f $(resume).rtf
+	-@rm -f $(resume)-filtered.xml
+	-@rm -f $(resume)-filtered.html
+	-@rm -f $(resume)-filtered.txt
+	-@rm -f $(resume)-filtered.pdf
+	-@rm -f $(resume)-filtered.fo
+	-@rm -f $(resume)-filtered.rtf
 
 $(resume).html: in = $(resume).xml
 $(resume).html: out = $(resume).html
@@ -162,3 +168,5 @@
 $(resume)-filtered.xml: $(resume).xml
 	$(filter_proc)
 	$(make) all resume=$(resume)-filtered
+
+#eof "xmlresume.mk -- fixed for french processing"
